asyncapi: 3.0.0
info:
  title: Hotel Domain
  version: 1.0.0
  description: Example API for Flea
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  tags:
    - name: hotel
defaultContentType: application/json
servers:
  local:
    host: 'localhost:8000'
    protocol: aws event bridge
    description: Local broker
channels:
  hotel.command:
    address: hotel.command
    messages:
      commandAddHotelRoom.message:
        $ref: '#/components/messages/commandAddHotelRoom'
    x-flea:
      channelType: commandHandler
  hotel.query:
    address: hotel.query
    messages:
      queryHotelRoomList.message:
        $ref: '#/components/messages/queryHotelRoomList'
      queryReplyHotelRoomList.message:
        $ref: '#/components/messages/queryReplyHotelRoomList'
    x-flea:
      channelType: queryHandler
  hotel.event:
    address: hotel.event
    messages:
      eventAddHotelRoomSubmitted.message:
        $ref: '#/components/messages/eventAddHotelRoomSubmitted'
    x-flea:
      channelType: eventBus
operations:
  receiveCommandAddHotelRoom:
    action: receive
    channel:
      $ref: '#/channels/hotel.command'
    messages:
      - $ref: '#/channels/hotel.command/messages/commandAddHotelRoom.message'
  receiveQueryHotelRoomList:
    action: receive
    channel:
      $ref: '#/channels/hotel.query'
    messages:
      - $ref: '#/channels/hotel.query/messages/queryHotelRoomList.message'
    reply:
      channel:
        $ref: '#/channels/hotel.query'
      messages:
        - $ref: '#/channels/hotel.query/messages/queryReplyHotelRoomList.message'
    bindings:
      http:
        method: GET
        bindingVersion: '0.3.0'
  sendEventAddHotelRoomSubmitted:
    action: send
    channel:
      $ref: '#/channels/hotel.event'
    messages:
      - $ref: '#/channels/hotel.event/messages/eventAddHotelRoomSubmitted.message'
  receiveEventAddHotelRoomSubmitted:
    action: receive
    channel:
      $ref: '#/channels/hotel.event'
    messages:
      - $ref: '#/channels/hotel.event/messages/eventAddHotelRoomSubmitted.message'
  receiveEventHotelRoomPaymentProcessed:
    action: send
    channel:
      $ref: 'libs/flea/asyncapi-generator-typescript-cdk-event-bridge/src/lib/test-fixtures/test-payment-asyncapi.yaml#/channels/payment.event'
    messages:
      - $ref: 'libs/flea/asyncapi-generator-typescript-cdk-event-bridge/src/lib/test-fixtures/test-payment-asyncapi.yaml#/channels/payment.event/messages/eventHotelRoomPaymentProcessed.message'
components:
  messages:
    commandAddHotelRoom:
      name: command/addHotelRoom
      title: Add hotel Room
      contentType: application/json
      payload:
        $ref: '#/components/schemas/CommandAddHotelRoom'
    queryHotelRoomList:
      name: query/hotelRoomList
      title: Query hotel room list
      contentType: application/json
      bindings:
        http:
          headers:
            type: object
            properties:
              Content-Type:
                type: string
                enum: [ 'application/json' ]
          bindingVersion: '0.3.0'
    queryReplyHotelRoomList:
      name: query-reply/hotelRoomList
      title: Reply to Query hotel room list
      contentType: application/json
      bindings:
        http:
          statusCode: 200
          headers:
            type: object
            properties:
              Content-Type:
                type: string
                enum: [ 'application/json' ]
          bindingVersion: '0.3.0'
      payload:
        $ref: '#/components/schemas/EventAddHotelRoomSubmitted'
    eventAddHotelRoomSubmitted:
      name: event/AddHotelRoomSubmitted
      payload:
        $ref: '#/components/schemas/QueryReplyHotelRoomList'
  schemas:
    CommandAddHotelRoom:
      additionalProperties: false
      type: object
      properties:
        roomId:
          type: string
          format: uuid
        sentAt:
          $ref: '#/components/schemas/SentAt'
    QueryReplyHotelRoomList:
      additionalProperties: false
      type: array
      items:
        type: object
        properties:
          roomId:
            type: string
            format: uuid
    EventAddHotelRoomSubmitted:
      allOf:
        - $ref: '#/components/schemas/EventEnvelope'
        -
          type: object
          additionalProperties: false
          required:
            - data
            - dataformat
          properties:
            dataFormat:
              $ref: '#/components/schemas/DataFormat'
            data:
              $ref: '#/components/schemas/Room'
    Room:
      type: object
      additionalProperties: false
      required:
        - roomId
      properties:
        roomId:
          type: string
          format: uuid
    EventEnvelope:
      additionalProperties: false
      type: object
      required:
        - id
        - sentAt
        - eventType
        - meta
        - scope
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        sentAt:
          $ref: '#/components/schemas/SentAt'
        eventType:
          type: string
        meta:
          $ref: '#/components/schemas/EventEnvelopeMeta'
        scope:
          $ref: '#/components/schemas/Scope'
    EventEnvelopeMeta:
      additionalProperties: false
      type: object
      required:
        - domain
        - lifeCycle
        - specVersion
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        specVersion:
          type: string
        userId:
          $ref: '#/components/schemas/UserId'
        tenantId:
          $ref: '#/components/schemas/TenantId'
        lifeCycle:
          $ref: '#/components/schemas/EventLifeCycle'
    Domain:
      additionalProperties: false
      type: object
      required:
        - name
      properties:
        name:
          type: string
        subject:
          $ref: '#/components/schemas/Subject'
    Subject:
      additionalProperties: false
      type: object
      required:
        - entity
      properties:
        id:
          type: string
        entity:
          type: string
        revision:
          type: string
    EventLifeCycle:
      additionalProperties: false
      type: object
      required:
        - source
        - origination
        - correlationId
        - chain
        - isReplayed
      properties:
        source:
          type: string
        origination:
          $ref: '#/components/schemas/Origination'
        correlationId:
          $ref: '#/components/schemas/CorrelationId'
        chain:
          type: array
          items:
            $ref: '#/components/schemas/EventLifeCycleChainItem'
        isReplayed:
          type: boolean
    EventLifeCycleChainItem:
      additionalProperties: false
      type: object
      required:
        - eventId
        - sentAt
      properties:
        eventId:
          $ref: '#/components/schemas/EventId'
        sentAt:
          $ref: '#/components/schemas/SentAt'
    EventId:
      type: string
      format: uuid
    CorrelationId:
      type: string
      format: uuid
    SentAt:
      type: string
      format: date-time
      description: Date and time when the message was sent.
    UserId:
      type: string
      format: uuid
    TenantId:
      type: string
      format: uuid
    Scope:
      type: string
      enum:
        - domain
        - integration
    Origination:
      type: string
      enum:
        - systemInvoked
        - registeredCommand
        - dataChanged
    DataFormat:
      additionalProperties: false
      type: object
      required:
        - contentType
        - schema
      properties:
        contentType:
          type: string
        schema:
          type: string
